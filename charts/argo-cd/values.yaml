argo-cd:
  namespace: default
  dex:
    enabled: false
  applicationSet:
    enabled: false
  server:
    extraArgs:
      - --insecure
  notifications:
    # -- Enable notifications controller
    enabled: true

    # -- Notifications controller name string
    name: notifications-controller

    # -- Argo CD dashboard url; used in place of {{.context.argocdUrl}} in templates
    argocdUrl:
    secret:
      create: true
      items:
        slack-token: 
    notifiers:
      service.slack: |
        token: $slack-token
    # -- Annotations to be applied to the notifications controller Deployment
    serviceAccount:
      # -- Create notifications controller service account
      create: true
      # -- Notification controller service account name
      name: argocd-notifications-controller
      # -- Annotations applied to created service account
      annotations: {}
      # -- Labels applied to created service account
      labels: {}
      # -- Automount API credentials for the Service Account
      automountServiceAccountToken: true

    cm:
      # -- Whether helm chart creates notifications controller config map
      create: true

    ## Enable this and set the rules: to whatever custom rules you want for the Cluster Role resource.
    ## Defaults to off
    clusterRoleRules:
      # -- List of custom rules for the notifications controller's ClusterRole resource
      rules: []

    # -- Contains centrally managed global application subscriptions
    ## For more information: https://argocd-notifications.readthedocs.io/en/stable/subscriptions/
    subscriptions:
      # # subscription for on-sync-status-unknown trigger notifications
#       - recipients:
#         - slack:test630
#         triggers:
#         - on-deployed
      # # subscription restricted to applications with matching labels only
      # - recipients:
      #   - slack:test3
      #   selector: test=true
    #   triggers:
    #   - on-sync-status-unknown

    # -- The notification template is used to generate the notification content
    ## For more information: https://argocd-notifications.readthedocs.io/en/stable/templates/
    templates:
      template.app-deployed: |
        message: |
          {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.
        slack:
          attachments: |
            [{
              "title": "{{ .app.metadata.name}}",
              "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#18be52",
              "fields": [
              {
                "title": "Sync Status",
                "value": "{{.app.status.sync.status}}",
                "short": true
              },
              {
                "title": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "short": true
              },
              {
                "title": "Revision",
                "value": "{{.app.status.sync.revision}}",
                "short": true
              }
              {{range $index, $c := .app.status.conditions}}
              {{if not $index}},{{end}}
              {{if $index}},{{end}}
              {
                "title": "{{$c.type}}",
                "value": "{{$c.message}}",
                "short": true
              }
              {{end}}
              ]
            }]
          groupingKey: ""
          notifyBroadcast: false
    # -- The trigger defines the condition when the notification should be sent
    ## For more information: https://argocd-notifications.readthedocs.io/en/stable/triggers/
    triggers:
      trigger.on-deployed: |
        - description: Application is synced and healthy. Triggered once per commit.
          oncePer: app.status.sync.revision
          send:
          - app-deployed
          when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'